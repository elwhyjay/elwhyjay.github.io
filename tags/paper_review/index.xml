<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper_review on Yongjun&#39;s blog</title>
    <link>http://localhost:1313/tags/paper_review/</link>
    <description>Recent content in Paper_review on Yongjun&#39;s blog</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 16 Nov 2024 22:27:54 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/paper_review/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrieval Papers Summary</title>
      <link>http://localhost:1313/post/retrieval-papers-summary/</link>
      <pubDate>Sat, 16 Nov 2024 22:27:54 +0900</pubDate>
      <guid>http://localhost:1313/post/retrieval-papers-summary/</guid>
      <description>&lt;p&gt;ODQA 프로젝트는 상당히 재밌게 마무리한것 같다. 특히 retrieval 파트는 현재 LLM까지도 정말 활발하게 사용되는 기술이라고한다.&#xA;Langchina이나 AutoRAG등 자동화된 rag기술들이 많지만 그래도 retrieval에대한 이해도를 높여두면 많은 도움이 될것같다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;sparse-retrieval&#34;&gt;Sparse Retrieval&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tf-idf&#34;&gt;TF-IDF&lt;/h2&gt;&#xA;&lt;h2 id=&#34;bm25&#34;&gt;BM25&lt;/h2&gt;&#xA;&lt;h1 id=&#34;dense-retrieval&#34;&gt;Dense Retrieval&lt;/h1&gt;&#xA;&lt;h2 id=&#34;encoder-structure&#34;&gt;Encoder structure&lt;/h2&gt;&#xA;&lt;h2 id=&#34;colbert&#34;&gt;ColBert&lt;/h2&gt;&#xA;&lt;h2 id=&#34;ance&#34;&gt;ANCE&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Matryoshka Representation Learning Review</title>
      <link>http://localhost:1313/post/matryoshka-representation-learning-review/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:29 +0900</pubDate>
      <guid>http://localhost:1313/post/matryoshka-representation-learning-review/</guid>
      <description>&lt;p&gt;blog도 개설한겸 논문한편을 리뷰해보고자 한다. 정말 오랜만에 작성하는 리뷰이다. 이 논문의 제목은&#xA;Matryoshka Representation Learning 으로 Neurips&#39;22 에 accept된 논문이다.&lt;/p&gt;&#xA;&lt;p&gt;학습된 representation (예를 들어 encoder로 embedding된 sentence 등)은 다양한 다운스트림 task에 활용된다. Bert 계열의 encoder의 embedding출력값이 768차원으로 고정되듯 각 다운스트림 task에서 고정된 표현은 부족하거나 과할 수 있다. 이 때 적절한 차원으로의 축소 역시 그 크기를 정하는데 많은 리소스를 사용해야만 한다. 이 논문은 마트료시카 표현 학습 방법(MRL)을 제시함으로써 인코더가 다양한 정보로 표현을 임베딩해 다운스트림 task에 적응하는 방법을 제시한다. MRL을 통해 학습된 표현은 단일모델로 학습된 동일한 차원의 표현만큼 잘 학습한다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
